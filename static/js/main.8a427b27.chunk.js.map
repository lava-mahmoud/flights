{"version":3,"sources":["logo.svg","components/registerfligt.js","components/displayFlights.js","components/header.js","components/searchFlight.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Registerfligt","state","flightNumber","from","to","date","handleChange","event","console","log","target","name","value","setState","validte","handlClick","preventDefault","props","addFlight","forceUpdate","type","this","onChange","onClick","disabled","Component","DisplayFlights","isClicked","className","flights","map","flight","index","key","Header","SearchFlight","filterdArray","fA","handleSearch","array","filter","App","newState","push","path","exact","render","Fragment","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8a427b27.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import React, { Component } from \"react\";\n\nexport class Registerfligt extends Component {\n  state = {\n    flightNumber: \"\",\n    from: \"\",\n    to: \"\",\n    date: \"\"\n  };\n  handleChange = event => {\n    console.log(\"name\", event.target.name);\n    console.log(\"value\", event.target.value);\n    this.setState({ [event.target.name]: event.target.value });\n  };\n  validte = () => {\n    const { flightNumber, from, to, date } = this.state;\n    const isEnabled =\n      flightNumber !== \"\" &&\n      from !== \"\" &&\n      to !== \"\" &&\n      date !== \"\" &&\n      from !== to;\n\n    return isEnabled;\n  };\n  handlClick = event => {\n    event.preventDefault();\n    if (this.validte()) {\n      this.props.addFlight(this.state);\n      this.setState({\n        flightNumber: \"\",\n        from: \"\",\n        to: \"\",\n        date: \"\"\n      });\n      this.forceUpdate();\n    }\n  };\n  render() {\n    return (\n      <div>\n        <label>flight Number</label>\n\n        <input\n          name=\"flightNumber\"\n          type=\"text\"\n          value={this.state.flightNumber}\n          onChange={this.handleChange}\n        />\n        <label>from</label>\n        <select\n          name=\"from\"\n          value={this.state.from}\n          onChange={this.handleChange}\n        >\n          <option value=\"dusseldorf\">dusseldorf</option>\n          <option value=\"krefeld\">krefeld</option>\n          <option value=\"essen\">essen</option>\n          <option value=\"velbert\">velbert</option>\n        </select>\n        {/*  <input\n          name=\"from\"\n          type=\"text\"\n          value={this.state.from}\n          onChange={this.handleChange}\n        /> */}\n\n        <label>to</label>\n        <select name=\"to\" value={this.state.to} onChange={this.handleChange}>\n          <option value=\"dusseldorf\">dusseldorf</option>\n          <option value=\"krefeld\">krefeld</option>\n          <option value=\"essen\">essen</option>\n          <option value=\"velbert\">velbert</option>\n        </select>\n\n        {/*         <input\n          name=\"to\"\n          type=\"text\"\n          value={this.state.to}\n          onChange={this.handleChange}\n        /> */}\n\n        <label>Date</label>\n\n        <input\n          name=\"date\"\n          type=\"date\"\n          value={this.state.date}\n          onChange={this.handleChange}\n        />\n\n        <button onClick={this.handlClick} disabled={!this.validte()}>\n          Register\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Registerfligt;\n","import React from \"react\";\n\nexport default function DisplayFlights(props) {\n  var isClicked = false;\n  return (\n    <div>\n      <table className=\"table table-dark\">\n        <thead>\n          <tr>\n            <th>FlightNumber</th>\n            <th>From</th>\n            <th>To</th>\n            <th>Date</th>\n          </tr>\n        </thead>\n        <tbody>\n          {props.flights.map((flight, index) => (\n            <tr key={index}>\n              <td>\n                <input\n                  name=\"flightNumber\"\n                  value={flight.flightNumber}\n                />\n              </td>\n              <td>\n                <input name=\"from\" value={flight.from} />\n              </td>\n              <td>\n                <input name=\"to\" value={flight.to}/>\n              </td>\n              <td>\n                <input name=\"date\" value={flight.date} />\n              </td>\n              <td>\n                <button\n                  onClick={() => {\n                    isClicked = true;\n                    console.log(isClicked);\n                  }}\n                >\n                  edit\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\n\nexport class Header extends Component {\n  render() {\n    return (\n      <div className=\"bg-dark  container pt-5 pb-2 text-white\">\n        <h3 className=\"d-flex justify-content-center mb-5\">Flights</h3>\n        <div className=\"nav d-flex justify-content-center\">\n          <Link to=\"/\">\n            <span className=\"text-white nav-link active\">Home</span>\n          </Link>\n{/*           <Link to=\"/displayFlight\">\n            <span className=\"text-white nav-link\">displayFlight</span>\n          </Link> */}\n          <Link to=\"/registerFlight\">\n            <span className=\"text-white nav-link\">registerFlight</span>\n          </Link>\n          <Link to='/searchFlight'>\n          <span className=\"text-white nav-link\">searchFlight</span>\n\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport DisplayFlights from \"./displayFlights\";\nexport class SearchFlight extends Component {\n  state = {\n    flightNumber: \"\",\n    from: \"\",\n    to: \"\",\n    date: \"\"\n  };\n  filterdArray = {\n    fA: []\n  };\n  handleChange = event => {\n    //console.log(\"name\", event.target.name);\n    //console.log(\"value\", event.target.value);\n    this.setState({ [event.target.name]: event.target.value });\n  };\n  handleSearch = event => {\n    event.preventDefault();\n    console.log(\"clicked\");\n    // if(this.state.form!=\"\")\n\n    const array = this.props.flights.filter(flight => {\n      if (this.state.from !== \"\" && this.state.to !== \"\") {\n        if(this.state.date!==\"\")  \n\n        {\n            if (this.state.from === flight.from && this.state.to === flight.to)\n            return flight;}\n      } else if (this.state.from !== \"\") {\n        if (this.state.from === flight.from) return flight;\n      } else if (this.state.to !== \"\") {\n        if (this.state.to === flight.to) return flight;\n      }\n    });\n    this.filterdArray.fA = array;\n    console.log(this.filterdArray.fA);\n    this.forceUpdate();\n  };\n  render() {\n    return (\n      <div>\n        <label>from</label>\n        <input\n          name=\"from\"\n          type=\"text\"\n          value={this.state.from}\n          onChange={this.handleChange}\n        />\n        <label>to</label>\n        <input\n          name=\"to\"\n          type=\"text\"\n          value={this.state.to}\n          onChange={this.handleChange}\n        />\n        <label>Date</label>\n        <input\n          name=\"date\"\n          type=\"date\"\n          value={this.state.date}\n          onChange={this.handleChange}\n        />\n        <button onClick={this.handleSearch}>sarch</button>\n        {/*  */}\n        {/*  */}\n        <DisplayFlights flights={this.filterdArray.fA} />\n      </div>\n    );\n  }\n}\n\nexport default SearchFlight;\n","import logo from \"./logo.svg\";\nimport Registerfligt from \"./components/registerfligt\"\nimport DisplayFlights from \"./components/displayFlights\"\nimport Header from \"./components/header\"\nimport SearchFlight from \"./components/searchFlight\"\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\n\n\n\nimport React, { Component } from 'react'\n\nexport class App extends Component {\n  state={\n    flights:[{  \n      flightNumber: \"L12\",\n       from: \"dusseldorf\",\n       to: \"essen\",\n       date: \"2019-10-22\"},\n       {  \n        flightNumber: \"L39\",\n         from: \"krefeld\",\n         to: \"velbert\",\n         date: \"2019-12-01\"},\n         {  \n          flightNumber: \"L27\",\n           from: \"dusseldorf\",\n           to: \"krefeld\",\n           date: \"2019-11-23\"},\n           {  \n            flightNumber: \"L30\",\n             from: \"essen\",\n             to: \"krefeld\",\n             date: \"2019-10-25\"}]\n  }\n  addFlight=(flight)=>{\n    var newState=this.state.flights.push(flight);\n    this.setState({newState})\n    console.log(this.state.flights);\n  }\n  render() {\n    return (\n\n      <Router>\n     \n        <Header />\n        <Route path=\"/\" exact Component= {<DisplayFlights flights={this.state.flights}/>}/>\n {/*        <Route\n            path=\"/\" \n\n            exact\n            render={props => (\n              <React.Fragment>\n             \n                <div className=\"table mt-5 container\">\n                  \n                <DisplayFlights flights={this.state.flights}/>\n                </div>\n\n              </React.Fragment>\n            )}\n          /> */}\n        <Route\n            path=\"/registerFlight\" \n            exact\n            render={props => (\n              <React.Fragment>\n                <div className=\"table mt-5 container\">\n                <Registerfligt addFlight={this.addFlight}/>\n                </div>\n                <div className=\"table mt-5 container\">\n                  \n                <DisplayFlights flights={this.state.flights}/>\n                </div>\n\n              </React.Fragment>\n            )}\n          />\n{/*             <Route\n            path=\"/displayFlight\"\n            exact\n            render={props => (\n              <React.Fragment>\n               <div className=\"table mt-5 container\">\n                <Registerfligt addFlight={this.addFlight}/>\n                </div>\n\n                \n              </React.Fragment>\n            )}\n          /> */}\n          <Route path='/searchFlight' exact render ={props=>(\n            <React.Fragment>\n\n\n                  <div className=\"table mt-5 container\">\n                  \n                  <SearchFlight flights={this.state.flights}/>\n                  </div>\n\n            </React.Fragment>\n\n          )} />\n\n\n    </Router>\n\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}